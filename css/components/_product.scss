@use "sass:math";
@use "../../Shared/css/template/dtm/utils/arp";

@use "../components/slide";

@use "../models/colors";
@use "../models/queries";
@use "../models/fonts";

$select: ".product" !default;
$breakpoint: 898px !default;

@mixin ui {
    #{$select} {
        $gap: 2rem;

        &__group {
            margin: 0 -#{$gap};
            overflow: hidden;

            @media all and (min-width: queries.get(small)) {
                display: flex;
                flex-wrap: wrap;
                justify-content: space-around;
            }
        }

        &__item {
            margin: #{$gap};
            flex: 1 1 400px;
        }

        @content;
    }
}

@mixin figure {
    @include arp.apply("#{$select}__picture .slide__item", math.div(534, 360));

    #{$select} {
        &__picture {
            #{slide.$select} {
                &__into {
                    margin: 0;
                }
            }
        }

        @content;
    }
}

@mixin list {
    #{$select} {
        &__list {
            &__headline {
                display: block;
                color: colors.get(second);
                font-size: 1.4em;
            }
        }

        &--list {
            ul {
                column-width: 20em;
                counter-reset: list-counter;
                margin: 0;
                font-size: 1em;
                list-style: none;
            }

            li {
                @media all and (min-width: queries.get(small)) {
                    padding-right: 1em;
                    display: inline-flex;
                    align-items: flex-start;
                }

                @media all and (min-width: $breakpoint) {
                    transition: opacity 0.2s ease-in-out,
                        transform 0.2s ease-in-out;
                }

                &:not(:last-child) {
                    padding-bottom: 1.5rem;
                }

                &::before {
                    $size: 1.35em;
                    counter-increment: list-counter;
                    content: counter(list-counter);
                    @include fonts.second(1.1em, 0.5);
                    font-weight: bold;
                    background: colors.get(sixth);
                    color: white;
                    width: #{$size};
                    height: #{$size};
                    padding: 0.25em;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    flex: 0 0 #{$size};
                    margin-right: 1em;
                    margin-left: 0;
                }

                @media all and (max-width: queries.get(small)) {
                    &::before {
                        display: none;
                    }
                }
            }
        }

        @media all and (min-width: queries.get(mobile)) {
            & &__list {
                li::before {
                    margin-left: 0;
                }
            }
        }

        @media all and (min-width: $breakpoint) {
            &--is-primed {
                li:not(#{$select}__is-selected) {
                    opacity: 0.5;
                    transform: translateX(5%);
                }
            }
        }

        @content;
    }
}
